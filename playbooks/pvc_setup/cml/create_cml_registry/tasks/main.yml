#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
# Get CML endpoint
- set_fact:
    cml_endpoint_api: "{{ cdp_endpoint_url }}/api/v1/ml"

- name: DEBUG - cml_endpoint_api
  debug:
    msg: "{{ cml_endpoint_api }}"

# Get env CRN
- name: List Environments and get its crn
  uri:
    url: "{{ pvc_api_call }}/environments2/listEnvironments"
    method: POST
    headers:
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    body_format: json
    body: "{\"pageSize\":500}"
    status_code: 200
    return_content: yes
    validate_certs: no
  register: env_details

- name: DEBUG - env_details
  debug:
    msg: "{{ env_details }}"
  when: debug | default(false)

- set_fact:
    env_crn: "{{ env_details.json | community.general.json_query(query) }}"
  vars:
    query: "environments[?environmentName == '{{ ml_registry.env_name }}' ].crn | [0]"
    
- name: DEBUG - env_crn
  debug:
    msg: "{{ env_crn }}"

# List and delete old CML Registry 
- name: List ML Registries
  uri:
    url: "{{ cml_endpoint_api }}/listModelRegistries"
    method: POST
    headers: 
      Accept: "*/*"
      Accept-Encoding: gzip, deflate, br
      Content-Type: application/json
      Cookie: "{{ all_cookies }}"
    body_format: json
    body: "{}"
    status_code: [200, 202]
    return_content: yes
    validate_certs: no
  register: ml_registries_answer

- name: DEBUG - ml_registries_answer
  debug:
    msg: "{{ ml_registries_answer }}"
  when: debug | default(false)

- set_fact:
    mlr_crn: "{{ ml_registries_answer.json | community.general.json_query(query) }}"
  vars:
    query: "modelRegistries[?environmentName == '{{ ml_registry.env_name }}' ].crn | [0]"
    
- name: DEBUG - mlr_crn
  debug:
    msg: "{{ mlr_crn }}"

- name: Delete Model Registry
  uri:
    url: "{{ cml_endpoint_api }}/deleteModelRegistry"
    method: POST
    headers: 
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    body_format: json
    body: "{{ lookup('template', 'delete_cml_registry.json') }}"
    status_code: [200, 202]
    return_content: yes
    validate_certs: no
  register: mlr_delete_answer
  when: mlr_crn != '' and ml_registry.to_recreate

- name: DEBUG - mlr_delete_answer
  debug:
    msg: "{{ mlr_delete_answer }}"
  when: mlr_crn != '' and ml_registry.to_recreate 

- name: Wait for Deletion to be done
  pause:
    seconds: 10
  when: mlr_crn != '' and ml_registry.to_recreate

# Create ML Registry
- name: Create CML Registry
  uri:
    url: "{{ cml_endpoint_api }}/createModelRegistry"
    method: POST
    headers: 
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    body_format: json
    body: "{{ lookup('template', 'create_cml_registry.json') }}"
    status_code: [200, 202]
    return_content: yes
    validate_certs: no
  when: mlr_crn == '' or ( mlr_crn != '' and ml_registry.to_recreate )


# Reducing Resources
- name: Wait 15 seconds for creation before lowering resources
  wait_for:
    timeout: 15

# Get model registry namespace
- name: List ML Registries
  uri:
    url: "{{ cml_endpoint_api }}/listModelRegistries"
    method: POST
    headers: 
      Accept: "*/*"
      Accept-Encoding: gzip, deflate, br
      Content-Type: application/json
      Cookie: "{{ all_cookies }}"
    body_format: json
    body: "{}"
    status_code: [200, 202]
    return_content: yes
    validate_certs: no
  register: ml_registries_answer

- name: DEBUG - ml_registries_answer
  debug:
    msg: "{{ ml_registries_answer }}"
  when: debug | default(false)

- set_fact:
    mlr_ns: "{{ ml_registries_answer.json | community.general.json_query(query) }}"
  vars:
    query: "modelRegistries[?environmentName == '{{ ml_registry.env_name }}' ].namespace | [0]"

- name: DEBUG - mlr_ns
  debug:
    msg: "{{ mlr_ns }}"
  when: debug | default(false)


# Lower resources

- name: Lower CML model-registry-v2 memory
  shell: "kubectl set resources deployment model-registry-v2  -n {{ mlr_ns }} --requests=memory=1Gi"
  when: pvc_eco_resources
  ignore_errors: true


- name: Lower CML model-registry-v2 cpu
  shell: "kubectl set resources deployment model-registry-v2  -n {{ mlr_ns }} --requests=cpu=0.250"
  when: pvc_eco_resources
  ignore_errors: true


- name: Lower CML model-registry-db memory
  shell: "kubectl set resources deployment model-registry-db  -n {{ mlr_ns }} --requests=memory=2Gi"
  when: pvc_eco_resources
  ignore_errors: true


- name: Scale down model-registry-v2
  shell: "kubectl scale deployment model-registry-v2  -n {{ mlr_ns }} --replicas=1"
  when: pvc_eco_resources
  ignore_errors: true