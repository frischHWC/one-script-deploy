#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---

- name: List Environments and get its crn
  uri:
    url: "{{ env_endpoint_api }}/listEnvironments"
    method: POST
    headers:
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    body_format: json
    body: "{\"pageSize\":500}"
    status_code: 200
    return_content: yes
    validate_certs: no
  register: env_details

- set_fact:
    env_crn: "{{ env_details.json | community.general.json_query(query) }}"
  vars:
    query: "environments[?environmentName == '{{ vc.env_name }}' ].crn | [0]"

- name: DEBUG - env_crn
  debug:
    msg: "{{ env_crn }}"
  when: debug | default(false)

- name: Get CDE Services
  uri:
    url: "{{ dex_endpoint_api }}/cluster"
    method: GET
    headers:
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    status_code: 200
    return_content: yes
    validate_certs: no
  register: cde_clusters

- set_fact:
    cde_service_id: "{{ cde_clusters.json | community.general.json_query(query) }}"
  vars:
    query: "[?name == '{{ vc.cde_service_name }}' && status != 'ClusterDeletionCompleted' ].id | [0]"

- name: DEBUG - cde_service_id
  debug:
    msg: "{{ cde_service_id }}"
  when: debug | default(false)

- name: Get CDE VCs
  uri:
    url: "{{ dex_endpoint_api }}/cluster/{{ cde_service_id }}/instance"
    method: GET
    headers:
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    status_code: 200
    return_content: yes
    validate_certs: no
  register: cde_vcs

- set_fact:
    cde_vc_id: "{{ cde_vcs.json | community.general.json_query(query_id) }}"
  vars:
    query_id: "[?name == '{{ vc.name }}' ].id | [0]"
  when: debug | default(false)

- name: DEBUG - cde_vc_id
  debug:
    msg: "{{ cde_vc_id }}"
  when: debug | default(false)


- name: Get CDE VC Details
  uri:
    url: "{{ dex_endpoint_api }}/cluster/{{ cde_service_id }}/instance/{{ cde_vc_id }}"
    method: GET
    headers:
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    status_code: 200
    return_content: yes
    validate_certs: no
  register: cde_vc_details

- set_fact:
    cde_vc_endpoint: "{{ cde_vc_details.json | community.general.json_query(query_id) }}"
  vars:
    query_id: "appInfo.dexApiUrl"

- name: DEBUG - cde_vc_endpoint
  debug:
    msg: "{{ cde_vc_endpoint }}"
  when: debug | default(false)

- set_fact:
    cde_vc_endpoint_hostname: "{{ cde_vc_endpoint.split('//')[1].split('/')[0] }}"

- name: DEBUG - cde_vc_endpoint_hostname
  debug:
    msg: "{{ cde_vc_endpoint_hostname }}"
  when: debug | default(false)


- name: Write user principal to file
  shell: "echo \"{{ user.name }}@{{ realm }}\" > /tmp/{{ user.name }}.principal"

- name: DEBUG - command to upload keytab
  debug:
    msg: "./cde-utils.sh init-user-in-virtual-cluster -h {{ cde_vc_endpoint_hostname }} -u {{ user.name }} -p /tmp/{{ user.name }}.principal -k {{ user.keytab }}"
  when: debug | default(False)

- name: Send keytab to cde cluster
  shell: "./cde-utils.sh init-user-in-virtual-cluster -h {{ cde_vc_endpoint_hostname }} -u {{ user.name }} -p /tmp/{{ user.name }}.principal -k {{ user.keytab }}"