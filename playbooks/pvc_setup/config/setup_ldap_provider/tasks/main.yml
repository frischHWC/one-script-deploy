#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
- name: Get admin user CRN
  uri:
    url: "{{ pvc_api_call }}/iam/listUsers"
    method: POST
    headers: 
      Content-TYpe: application/json
      Cookie: "{{ all_cookies }}"
    body: "{\"pageSize\":500}"
    status_code: 200
    return_content: yes
    validate_certs: no
  register: list_all_users

- set_fact:
    admin_crn: "{{ list_all_users.json | community.general.json_query(query) }}"
  vars:
    query: "users[?workloadUsername == 'admin' ].crn | [0]"

- name: DEBUG - admin_crn
  debug:
    msg: "{{ admin_crn }}"
  when: debug | default(false)



- name: Fetch IPA CA file
  slurp:
    src: "/etc/ipa/ca.crt"
  register: slurped_ca_crt

- name: Decode ca 
  set_fact:
    ipa_crt: "{{ slurped_ca_crt.content | b64decode }}"


- name: ldap.json file 
  set_fact:
    ldap_json_file: "ldap.json"

- name: ldap.json file 
  set_fact:
    ldap_json_file: "ldap-1_5_5_SP1.json"
  when: pvc_version is version('1.5.5', '>')

- name: DEBUG - ldap_json_file
  debug:
    msg: "{{ ldap_json_file }}"
  when: debug | default(false)

- name: Set LDAP provider
  uri:
    url: "{{ pvc_api_call }}/iam/createLdapProvider"
    method: POST
    headers: 
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    body: "{{ lookup('template', '{{ ldap_json_file }}') }}"
    body_format: json
    status_code: [200, 400, 409]
    return_content: yes
    validate_certs: no
  register: ldap_provider_answer
  ignore_errors: true

- name: DEBUG - ldap_provider_answer
  debug:
    msg: "{{ ldap_provider_answer }}"
  when: debug | default(false)


- name: Update LDAP provider
  uri:
    url: "{{ pvc_api_call }}/iam/updateLdapProvider"
    method: POST
    headers: 
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    body: "{{ lookup('template', '{{ ldap_json_file }}') }}"
    body_format: json
    status_code: [200, 400, 409]
    return_content: yes
    validate_certs: no
  register: ldap_provider_answer
  ignore_errors: true

- name: DEBUG - ldap_provider_answer
  debug:
    msg: "{{ ldap_provider_answer }}"
  when: debug | default(false)


# Starting from 1.5.5SP1, we need to set identity provider
- name: Set LDAP provider
  uri:
    url: "{{ pvc_api_call }}/iam/setDefaultIdentityProvider"
    method: POST
    headers: 
      Content-Type: application/json
      Accept: application/json
      Cookie: "{{ all_cookies }}"
    body: "{\"nameOrCrn\":\"cm-ldap\"}"
    body_format: json
    status_code: [200, 400, 409]
    return_content: yes
    validate_certs: no
  register: ldap_provider_answer
  ignore_errors: true

- name: DEBUG - ldap_provider_answer
  debug:
    msg: "{{ ldap_provider_answer }}"
  when: debug | default(false)